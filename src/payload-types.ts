/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    customers: Customer;
    contactForm: ContactForm;
    media: Media;
    pages: Page;
    postCategories: PostCategory;
    posts: Post;
    productCategories: ProductCategory;
    products: Product;
    productSubCategories: ProductSubCategory;
    orders: Order;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    customers: {
      orders: 'orders';
    };
    postCategories: {
      posts: 'posts';
    };
    productCategories: {
      productSubCategories: 'productSubCategories';
      products: 'products';
    };
    products: {
      orders: 'orders';
    };
    productSubCategories: {
      products: 'products';
    };
  };
  collectionsSelect: {
    customers: CustomersSelect<false> | CustomersSelect<true>;
    contactForm: ContactFormSelect<false> | ContactFormSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    postCategories: PostCategoriesSelect<false> | PostCategoriesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    productCategories: ProductCategoriesSelect<false> | ProductCategoriesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    productSubCategories: ProductSubCategoriesSelect<false> | ProductSubCategoriesSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    checkoutPageGlobal: CheckoutPageGlobal;
    contactFormGlobal: ContactFormGlobal;
    floatingGlobal: FloatingGlobal;
    footerGlobal: FooterGlobal;
    headerGlobal: HeaderGlobal;
    popupBannerGlobal: PopupBannerGlobal;
    promoGlobal: PromoGlobal;
    reviewsGlobal: ReviewsGlobal;
  };
  globalsSelect: {
    checkoutPageGlobal: CheckoutPageGlobalSelect<false> | CheckoutPageGlobalSelect<true>;
    contactFormGlobal: ContactFormGlobalSelect<false> | ContactFormGlobalSelect<true>;
    floatingGlobal: FloatingGlobalSelect<false> | FloatingGlobalSelect<true>;
    footerGlobal: FooterGlobalSelect<false> | FooterGlobalSelect<true>;
    headerGlobal: HeaderGlobalSelect<false> | HeaderGlobalSelect<true>;
    popupBannerGlobal: PopupBannerGlobalSelect<false> | PopupBannerGlobalSelect<true>;
    promoGlobal: PromoGlobalSelect<false> | PromoGlobalSelect<true>;
    reviewsGlobal: ReviewsGlobalSelect<false> | ReviewsGlobalSelect<true>;
  };
  locale: 'en' | 'vi';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  name?: string | null;
  email?: string | null;
  phoneNumber?: string | null;
  address?: string | null;
  orders?: {
    docs?: (number | Order)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  review?: {
    rating?: number | null;
    content?: string | null;
    approved?: boolean | null;
  };
  products: number | Product;
  customers: number | Customer;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  productCategories?: (number | ProductCategory)[] | null;
  productSubCategories?: (number | ProductSubCategory)[] | null;
  title: string;
  shortDescription: string;
  longDescription?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  variants: {
    title: string;
    sku: string;
    stock: number;
    price: number;
    defaultVariant?: boolean | null;
    image?: (number | null) | Media;
    id?: string | null;
  }[];
  icon?: (number | null) | Media;
  gallery?: (number | Media)[] | null;
  reviewsVisible?: ('show' | 'hide') | null;
  heroSubtitle?: string | null;
  heroTitle?: string | null;
  heroDescription?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  heroMedia?: (number | null) | Media;
  content?:
    | (
        | ArchiveBlockProps
        | BuyNowBlockProps
        | CallToActionCenterBlockProps
        | CallToActionLeftBlockProps
        | CallToActionRightBlockProps
        | CallToAddToCartBlockProps
        | CertificatesBlockProps
        | ContentBlockProps
        | FormBlockProps
        | HighlightRightBlockProps
        | HighlightCenterBlockProps
        | HighlightLeftBlockProps
        | HowToUseProductBlockProps
        | InfiniteScrollBlockProps
        | LatestPostsBlockProps
        | MediaBlockProps
        | ProductsCarouselBlockProps
        | ThreePhotoBlockProps
      )[]
    | null;
  orders?: {
    docs?: (number | Order)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  meta?: {
    meta?: {
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (number | null) | Media;
      description?: string | null;
    };
  };
  slug?: string | null;
  slugLock?: boolean | null;
  footerSize?: ('small' | 'medium' | 'large') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productCategories".
 */
export interface ProductCategory {
  id: number;
  title: string;
  productSubCategories?: {
    docs?: (number | ProductSubCategory)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  products?: {
    docs?: (number | Product)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  footerSize?: ('small' | 'medium' | 'large') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productSubCategories".
 */
export interface ProductSubCategory {
  id: number;
  productCategories: number | ProductCategory;
  title: string;
  products?: {
    docs?: (number | Product)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  footerSize?: ('small' | 'medium' | 'large') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlockProps".
 */
export interface ArchiveBlockProps {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  postCategories?: (number | PostCategory)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "postCategories".
 */
export interface PostCategory {
  id: number;
  title: string;
  posts?: {
    docs?: (number | Post)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  layout?: (CallToActionPostBlockProps | PostsGridBlockProps)[] | null;
  slug?: string | null;
  slugLock?: boolean | null;
  footerSize?: ('small' | 'medium' | 'large') | null;
  parent?: (number | null) | PostCategory;
  breadcrumbs?:
    | {
        doc?: (number | null) | PostCategory;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  layout: (
    | ArchiveBlockProps
    | BuyNowBlockProps
    | CallToActionCenterBlockProps
    | CallToActionLeftBlockProps
    | CallToActionRightBlockProps
    | CallToAddToCartBlockProps
    | CertificatesBlockProps
    | ContentBlockProps
    | FocusLeftSmallImageBlockProps
    | FocusRightLargeImageBlockProps
    | FocusRightSmallImageBlockProps
    | FormBlockProps
    | HighlightRightBlockProps
    | HighlightCenterBlockProps
    | HighlightLeftBlockProps
    | InfiniteScrollBlockProps
    | MediaBlockProps
    | ProductsCarouselBlockProps
    | ProductsCategoryBlockProps
    | ThreePhotoBlockProps
  )[];
  relatedPosts?: (number | Post)[] | null;
  postCategories?: (number | PostCategory)[] | null;
  meta?: {
    meta?: {
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (number | null) | Media;
      description?: string | null;
    };
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  footerSize?: ('small' | 'medium' | 'large') | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BuyNowBlockProps".
 */
export interface BuyNowBlockProps {
  buttonLabel?: string | null;
  products?: (number | null) | Product;
  id?: string | null;
  blockName?: string | null;
  blockType: 'buy-now';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionCenterBlockProps".
 */
export interface CallToActionCenterBlockProps {
  title: string;
  'sub-title'?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  background?: (number | null) | Media;
  button: {
    text: string;
    link?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'postCategories';
            value: number | PostCategory;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null)
        | ({
            relationTo: 'productCategories';
            value: number | ProductCategory;
          } | null)
        | ({
            relationTo: 'products';
            value: number | Product;
          } | null)
        | ({
            relationTo: 'productSubCategories';
            value: number | ProductSubCategory;
          } | null);
      url?: string | null;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta-center';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    title?: string | null;
    subtitle?: string | null;
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'postCategories';
                  value: number | PostCategory;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null)
              | ({
                  relationTo: 'productCategories';
                  value: number | ProductCategory;
                } | null)
              | ({
                  relationTo: 'products';
                  value: number | Product;
                } | null)
              | ({
                  relationTo: 'productSubCategories';
                  value: number | ProductSubCategory;
                } | null);
            url?: string | null;
            label: string;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (
    | ArchiveBlockProps
    | BannerBlockProps
    | BestSellerBlockProps
    | BuyNowBlockProps
    | CallToActionCenterBlockProps
    | CallToActionLeftBlockProps
    | CallToActionPostBlockProps
    | CallToActionRightBlockProps
    | CallToAddToCartBlockProps
    | CertificatesBlockProps
    | ContentBlockProps
    | FormBlockProps
    | HighlightRightBlockProps
    | HighlightCenterBlockProps
    | HighlightLeftBlockProps
    | InfiniteScrollBlockProps
    | LatestPostsBlockProps
    | MediaBlockProps
    | PostsGridBlockProps
    | ProductsCarouselBlockProps
    | ProductsCategoryBlockProps
    | ThreePhotoBlockProps
  )[];
  meta?: {
    meta?: {
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (number | null) | Media;
      description?: string | null;
    };
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  footerSize?: ('small' | 'medium' | 'large') | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlockProps".
 */
export interface BannerBlockProps {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BestSellerBlockProps".
 */
export interface BestSellerBlockProps {
  title: string;
  description?: string | null;
  products?: (number | Product)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'bestSeller';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionLeftBlockProps".
 */
export interface CallToActionLeftBlockProps {
  title: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  background?: (number | null) | Media;
  button: {
    text: string;
    link?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'postCategories';
            value: number | PostCategory;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null)
        | ({
            relationTo: 'productCategories';
            value: number | ProductCategory;
          } | null)
        | ({
            relationTo: 'products';
            value: number | Product;
          } | null)
        | ({
            relationTo: 'productSubCategories';
            value: number | ProductSubCategory;
          } | null);
      url?: string | null;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta-left';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionPostBlockProps".
 */
export interface CallToActionPostBlockProps {
  post: number | Post;
  overwriteTitle?: string | null;
  overwriteDescription?: string | null;
  buttonLabel: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'call-to-action-post';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionRightBlockProps".
 */
export interface CallToActionRightBlockProps {
  title: string;
  'sub-title'?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  gallery?:
    | {
        title: string;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  button: {
    text: string;
    link?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'postCategories';
            value: number | PostCategory;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null)
        | ({
            relationTo: 'productCategories';
            value: number | ProductCategory;
          } | null)
        | ({
            relationTo: 'products';
            value: number | Product;
          } | null)
        | ({
            relationTo: 'productSubCategories';
            value: number | ProductSubCategory;
          } | null);
      url?: string | null;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta-right';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToAddToCartBlockProps".
 */
export interface CallToAddToCartBlockProps {
  image?: (number | null) | Media;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  buttonLabel: string;
  products?: (number | null) | Product;
  id?: string | null;
  blockName?: string | null;
  blockType: 'call-to-add-to-cart';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CertificatesBlockProps".
 */
export interface CertificatesBlockProps {
  title: string;
  organizations?:
    | {
        title: string;
        description: string;
        logo?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'certificates';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlockProps".
 */
export interface ContentBlockProps {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        font?: ('default' | 'serif' | 'sans-serif' | 'monospace') | null;
        customCss?: string | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'postCategories';
                value: number | PostCategory;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null)
            | ({
                relationTo: 'productCategories';
                value: number | ProductCategory;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null)
            | ({
                relationTo: 'productSubCategories';
                value: number | ProductSubCategory;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlockProps".
 */
export interface FormBlockProps {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HighlightRightBlockProps".
 */
export interface HighlightRightBlockProps {
  order: number;
  title: string;
  description: string;
  image?: (number | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'highlight-right';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HighlightCenterBlockProps".
 */
export interface HighlightCenterBlockProps {
  order: number;
  title: string;
  description: string;
  image?: (number | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'highlight-center';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HighlightLeftBlockProps".
 */
export interface HighlightLeftBlockProps {
  order: number;
  title: string;
  description: string;
  image?: (number | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'highlight-left';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InfiniteScrollBlockProps".
 */
export interface InfiniteScrollBlockProps {
  graphic: number | Media;
  animationDuration?: number | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'infiniteScroll';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LatestPostsBlockProps".
 */
export interface LatestPostsBlockProps {
  title: string;
  buttonLabel: string;
  posts: (number | Post)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'latestPosts';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlockProps".
 */
export interface MediaBlockProps {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'media';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PostsGridBlockProps".
 */
export interface PostsGridBlockProps {
  postCategories?: (number | null) | PostCategory;
  id?: string | null;
  blockName?: string | null;
  blockType: 'posts-grid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductsCarouselBlockProps".
 */
export interface ProductsCarouselBlockProps {
  title: string;
  products?: (number | Product)[] | null;
  watchMoreBtnLabel: string;
  apb: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'postCategories';
          value: number | PostCategory;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null)
      | ({
          relationTo: 'productCategories';
          value: number | ProductCategory;
        } | null)
      | ({
          relationTo: 'products';
          value: number | Product;
        } | null)
      | ({
          relationTo: 'productSubCategories';
          value: number | ProductSubCategory;
        } | null);
    url?: string | null;
    label: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'productsCarousel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductsCategoryBlockProps".
 */
export interface ProductsCategoryBlockProps {
  category:
    | {
        relationTo: 'productCategories';
        value: number | ProductCategory;
      }
    | {
        relationTo: 'productSubCategories';
        value: number | ProductSubCategory;
      };
  buttonLabel: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'productsCategory';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ThreePhotoBlockProps".
 */
export interface ThreePhotoBlockProps {
  photoLeft?: (number | null) | Media;
  photoCenter?: (number | null) | Media;
  photoRight?: (number | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'threePhoto';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FocusLeftSmallImageBlockProps".
 */
export interface FocusLeftSmallImageBlockProps {
  image?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'focus-left-small-image';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FocusRightLargeImageBlockProps".
 */
export interface FocusRightLargeImageBlockProps {
  image?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'focus-right-large-image';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FocusRightSmallImageBlockProps".
 */
export interface FocusRightSmallImageBlockProps {
  image?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'focus-right-small-image';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  role: 'admin' | 'sales-manager' | 'content-manager';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HowToUseProductBlockProps".
 */
export interface HowToUseProductBlockProps {
  title: string;
  subtitle?: string | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  image?: (number | null) | Media;
  products?: (number | null) | Product;
  id?: string | null;
  blockName?: string | null;
  blockType: 'how-to-use-product';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactForm".
 */
export interface ContactForm {
  id: number;
  username: string;
  email: string;
  phoneNumber: string;
  message: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'customers';
        value: number | Customer;
      } | null)
    | ({
        relationTo: 'contactForm';
        value: number | ContactForm;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'postCategories';
        value: number | PostCategory;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'productCategories';
        value: number | ProductCategory;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'productSubCategories';
        value: number | ProductSubCategory;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  phoneNumber?: T;
  address?: T;
  orders?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactForm_select".
 */
export interface ContactFormSelect<T extends boolean = true> {
  username?: T;
  email?: T;
  phoneNumber?: T;
  message?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        title?: T;
        subtitle?: T;
        description?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        archive?: T | ArchiveBlockPropsSelect<T>;
        banner?: T | BannerBlockPropsSelect<T>;
        bestSeller?: T | BestSellerBlockPropsSelect<T>;
        'buy-now'?: T | BuyNowBlockPropsSelect<T>;
        'cta-center'?: T | CallToActionCenterBlockPropsSelect<T>;
        'cta-left'?: T | CallToActionLeftBlockPropsSelect<T>;
        'call-to-action-post'?: T | CallToActionPostBlockPropsSelect<T>;
        'cta-right'?: T | CallToActionRightBlockPropsSelect<T>;
        'call-to-add-to-cart'?: T | CallToAddToCartBlockPropsSelect<T>;
        certificates?: T | CertificatesBlockPropsSelect<T>;
        content?: T | ContentBlockPropsSelect<T>;
        formBlock?: T | FormBlockPropsSelect<T>;
        'highlight-right'?: T | HighlightRightBlockPropsSelect<T>;
        'highlight-center'?: T | HighlightCenterBlockPropsSelect<T>;
        'highlight-left'?: T | HighlightLeftBlockPropsSelect<T>;
        infiniteScroll?: T | InfiniteScrollBlockPropsSelect<T>;
        latestPosts?: T | LatestPostsBlockPropsSelect<T>;
        media?: T | MediaBlockPropsSelect<T>;
        'posts-grid'?: T | PostsGridBlockPropsSelect<T>;
        productsCarousel?: T | ProductsCarouselBlockPropsSelect<T>;
        productsCategory?: T | ProductsCategoryBlockPropsSelect<T>;
        threePhoto?: T | ThreePhotoBlockPropsSelect<T>;
      };
  meta?:
    | T
    | {
        meta?:
          | T
          | {
              title?: T;
              image?: T;
              description?: T;
            };
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  footerSize?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlockProps_select".
 */
export interface ArchiveBlockPropsSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  postCategories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlockProps_select".
 */
export interface BannerBlockPropsSelect<T extends boolean = true> {
  style?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BestSellerBlockProps_select".
 */
export interface BestSellerBlockPropsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  products?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BuyNowBlockProps_select".
 */
export interface BuyNowBlockPropsSelect<T extends boolean = true> {
  buttonLabel?: T;
  products?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionCenterBlockProps_select".
 */
export interface CallToActionCenterBlockPropsSelect<T extends boolean = true> {
  title?: T;
  'sub-title'?: T;
  description?: T;
  background?: T;
  button?:
    | T
    | {
        text?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionLeftBlockProps_select".
 */
export interface CallToActionLeftBlockPropsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  background?: T;
  button?:
    | T
    | {
        text?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionPostBlockProps_select".
 */
export interface CallToActionPostBlockPropsSelect<T extends boolean = true> {
  post?: T;
  overwriteTitle?: T;
  overwriteDescription?: T;
  buttonLabel?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionRightBlockProps_select".
 */
export interface CallToActionRightBlockPropsSelect<T extends boolean = true> {
  title?: T;
  'sub-title'?: T;
  description?: T;
  gallery?:
    | T
    | {
        title?: T;
        image?: T;
        id?: T;
      };
  button?:
    | T
    | {
        text?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToAddToCartBlockProps_select".
 */
export interface CallToAddToCartBlockPropsSelect<T extends boolean = true> {
  image?: T;
  content?: T;
  buttonLabel?: T;
  products?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CertificatesBlockProps_select".
 */
export interface CertificatesBlockPropsSelect<T extends boolean = true> {
  title?: T;
  organizations?:
    | T
    | {
        title?: T;
        description?: T;
        logo?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlockProps_select".
 */
export interface ContentBlockPropsSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        font?: T;
        customCss?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlockProps_select".
 */
export interface FormBlockPropsSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HighlightRightBlockProps_select".
 */
export interface HighlightRightBlockPropsSelect<T extends boolean = true> {
  order?: T;
  title?: T;
  description?: T;
  image?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HighlightCenterBlockProps_select".
 */
export interface HighlightCenterBlockPropsSelect<T extends boolean = true> {
  order?: T;
  title?: T;
  description?: T;
  image?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HighlightLeftBlockProps_select".
 */
export interface HighlightLeftBlockPropsSelect<T extends boolean = true> {
  order?: T;
  title?: T;
  description?: T;
  image?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InfiniteScrollBlockProps_select".
 */
export interface InfiniteScrollBlockPropsSelect<T extends boolean = true> {
  graphic?: T;
  animationDuration?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LatestPostsBlockProps_select".
 */
export interface LatestPostsBlockPropsSelect<T extends boolean = true> {
  title?: T;
  buttonLabel?: T;
  posts?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlockProps_select".
 */
export interface MediaBlockPropsSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PostsGridBlockProps_select".
 */
export interface PostsGridBlockPropsSelect<T extends boolean = true> {
  postCategories?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductsCarouselBlockProps_select".
 */
export interface ProductsCarouselBlockPropsSelect<T extends boolean = true> {
  title?: T;
  products?: T;
  watchMoreBtnLabel?: T;
  apb?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductsCategoryBlockProps_select".
 */
export interface ProductsCategoryBlockPropsSelect<T extends boolean = true> {
  category?: T;
  buttonLabel?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ThreePhotoBlockProps_select".
 */
export interface ThreePhotoBlockPropsSelect<T extends boolean = true> {
  photoLeft?: T;
  photoCenter?: T;
  photoRight?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "postCategories_select".
 */
export interface PostCategoriesSelect<T extends boolean = true> {
  title?: T;
  posts?: T;
  layout?:
    | T
    | {
        'call-to-action-post'?: T | CallToActionPostBlockPropsSelect<T>;
        'posts-grid'?: T | PostsGridBlockPropsSelect<T>;
      };
  slug?: T;
  slugLock?: T;
  footerSize?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  layout?:
    | T
    | {
        archive?: T | ArchiveBlockPropsSelect<T>;
        'buy-now'?: T | BuyNowBlockPropsSelect<T>;
        'cta-center'?: T | CallToActionCenterBlockPropsSelect<T>;
        'cta-left'?: T | CallToActionLeftBlockPropsSelect<T>;
        'cta-right'?: T | CallToActionRightBlockPropsSelect<T>;
        'call-to-add-to-cart'?: T | CallToAddToCartBlockPropsSelect<T>;
        certificates?: T | CertificatesBlockPropsSelect<T>;
        content?: T | ContentBlockPropsSelect<T>;
        'focus-left-small-image'?: T | FocusLeftSmallImageBlockPropsSelect<T>;
        'focus-right-large-image'?: T | FocusRightLargeImageBlockPropsSelect<T>;
        'focus-right-small-image'?: T | FocusRightSmallImageBlockPropsSelect<T>;
        formBlock?: T | FormBlockPropsSelect<T>;
        'highlight-right'?: T | HighlightRightBlockPropsSelect<T>;
        'highlight-center'?: T | HighlightCenterBlockPropsSelect<T>;
        'highlight-left'?: T | HighlightLeftBlockPropsSelect<T>;
        infiniteScroll?: T | InfiniteScrollBlockPropsSelect<T>;
        media?: T | MediaBlockPropsSelect<T>;
        productsCarousel?: T | ProductsCarouselBlockPropsSelect<T>;
        productsCategory?: T | ProductsCategoryBlockPropsSelect<T>;
        threePhoto?: T | ThreePhotoBlockPropsSelect<T>;
      };
  relatedPosts?: T;
  postCategories?: T;
  meta?:
    | T
    | {
        meta?:
          | T
          | {
              title?: T;
              image?: T;
              description?: T;
            };
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  footerSize?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FocusLeftSmallImageBlockProps_select".
 */
export interface FocusLeftSmallImageBlockPropsSelect<T extends boolean = true> {
  image?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FocusRightLargeImageBlockProps_select".
 */
export interface FocusRightLargeImageBlockPropsSelect<T extends boolean = true> {
  image?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FocusRightSmallImageBlockProps_select".
 */
export interface FocusRightSmallImageBlockPropsSelect<T extends boolean = true> {
  image?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productCategories_select".
 */
export interface ProductCategoriesSelect<T extends boolean = true> {
  title?: T;
  productSubCategories?: T;
  products?: T;
  slug?: T;
  slugLock?: T;
  footerSize?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  productCategories?: T;
  productSubCategories?: T;
  title?: T;
  shortDescription?: T;
  longDescription?: T;
  variants?:
    | T
    | {
        title?: T;
        sku?: T;
        stock?: T;
        price?: T;
        defaultVariant?: T;
        image?: T;
        id?: T;
      };
  icon?: T;
  gallery?: T;
  reviewsVisible?: T;
  heroSubtitle?: T;
  heroTitle?: T;
  heroDescription?: T;
  heroMedia?: T;
  content?:
    | T
    | {
        archive?: T | ArchiveBlockPropsSelect<T>;
        'buy-now'?: T | BuyNowBlockPropsSelect<T>;
        'cta-center'?: T | CallToActionCenterBlockPropsSelect<T>;
        'cta-left'?: T | CallToActionLeftBlockPropsSelect<T>;
        'cta-right'?: T | CallToActionRightBlockPropsSelect<T>;
        'call-to-add-to-cart'?: T | CallToAddToCartBlockPropsSelect<T>;
        certificates?: T | CertificatesBlockPropsSelect<T>;
        content?: T | ContentBlockPropsSelect<T>;
        formBlock?: T | FormBlockPropsSelect<T>;
        'highlight-right'?: T | HighlightRightBlockPropsSelect<T>;
        'highlight-center'?: T | HighlightCenterBlockPropsSelect<T>;
        'highlight-left'?: T | HighlightLeftBlockPropsSelect<T>;
        'how-to-use-product'?: T | HowToUseProductBlockPropsSelect<T>;
        infiniteScroll?: T | InfiniteScrollBlockPropsSelect<T>;
        latestPosts?: T | LatestPostsBlockPropsSelect<T>;
        media?: T | MediaBlockPropsSelect<T>;
        productsCarousel?: T | ProductsCarouselBlockPropsSelect<T>;
        threePhoto?: T | ThreePhotoBlockPropsSelect<T>;
      };
  orders?: T;
  meta?:
    | T
    | {
        meta?:
          | T
          | {
              title?: T;
              image?: T;
              description?: T;
            };
      };
  slug?: T;
  slugLock?: T;
  footerSize?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HowToUseProductBlockProps_select".
 */
export interface HowToUseProductBlockPropsSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  content?: T;
  image?: T;
  products?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productSubCategories_select".
 */
export interface ProductSubCategoriesSelect<T extends boolean = true> {
  productCategories?: T;
  title?: T;
  products?: T;
  slug?: T;
  slugLock?: T;
  footerSize?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  review?:
    | T
    | {
        rating?: T;
        content?: T;
        approved?: T;
      };
  products?: T;
  customers?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "checkoutPageGlobal".
 */
export interface CheckoutPageGlobal {
  id: number;
  contacts: {
    title: string;
    emailInputLabel: string;
    acceptNewsletter: string;
  };
  address: {
    title: string;
    nameInputLabel: string;
    phoneInputLabel: string;
    provinceCityInputLabel: string;
    districtInputLabel: string;
    wardInputLabel: string;
    details: string;
    saveForNextTime: string;
  };
  shipping: {
    title: string;
    standardShippingLabel: string;
    fastShippingLabel: string;
  };
  payment: {
    title: string;
    codLabel: string;
    bankTransferLabel: string;
  };
  gift: {
    title: string;
    senderInputLabel: string;
    recipientInputLabel: string;
    messageInputLabel: string;
  };
  order: {
    title: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactFormGlobal".
 */
export interface ContactFormGlobal {
  id: number;
  title: string;
  name: string;
  phoneNumber: string;
  email: string;
  question: string;
  actionSend: string;
  biolakPhoneNumber?: string | null;
  actionCall: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "floatingGlobal".
 */
export interface FloatingGlobal {
  id: number;
  label: string;
  links?:
    | {
        link: string;
        icon?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footerGlobal".
 */
export interface FooterGlobal {
  id: number;
  image?: {
    image?: (number | null) | Media;
  };
  contactUs: {
    title: string;
    emailInputLabel: string;
    description: string;
  };
  legal: {
    title: string;
    content: string;
    stamp: number | Media;
    copyright: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "headerGlobal".
 */
export interface HeaderGlobal {
  id: number;
  headerItemsLeft?:
    | {
        kind?: ('prebuilt' | 'internalUrl' | 'customUrl') | null;
        prebuilt?: ('search' | 'products' | 'about' | 'contact' | 'vie-en' | 'cart') | null;
        customUrl?: string | null;
        internalUrl?:
          | ({
              relationTo: 'pages';
              value: number | Page;
            } | null)
          | ({
              relationTo: 'postCategories';
              value: number | PostCategory;
            } | null)
          | ({
              relationTo: 'posts';
              value: number | Post;
            } | null)
          | ({
              relationTo: 'productCategories';
              value: number | ProductCategory;
            } | null)
          | ({
              relationTo: 'products';
              value: number | Product;
            } | null)
          | ({
              relationTo: 'productSubCategories';
              value: number | ProductSubCategory;
            } | null);
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  headerItemsRight?:
    | {
        kind?: ('prebuilt' | 'internalUrl' | 'customUrl') | null;
        prebuilt?: ('search' | 'products' | 'about' | 'contact' | 'vie-en' | 'cart') | null;
        customUrl?: string | null;
        internalUrl?:
          | ({
              relationTo: 'pages';
              value: number | Page;
            } | null)
          | ({
              relationTo: 'postCategories';
              value: number | PostCategory;
            } | null)
          | ({
              relationTo: 'posts';
              value: number | Post;
            } | null)
          | ({
              relationTo: 'productCategories';
              value: number | ProductCategory;
            } | null)
          | ({
              relationTo: 'products';
              value: number | Product;
            } | null)
          | ({
              relationTo: 'productSubCategories';
              value: number | ProductSubCategory;
            } | null);
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "popupBannerGlobal".
 */
export interface PopupBannerGlobal {
  id: number;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "promoGlobal".
 */
export interface PromoGlobal {
  id: number;
  message?: string | null;
  link: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'postCategories';
          value: number | PostCategory;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null)
      | ({
          relationTo: 'productCategories';
          value: number | ProductCategory;
        } | null)
      | ({
          relationTo: 'products';
          value: number | Product;
        } | null)
      | ({
          relationTo: 'productSubCategories';
          value: number | ProductSubCategory;
        } | null);
    url?: string | null;
    label: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviewsGlobal".
 */
export interface ReviewsGlobal {
  id: number;
  title: string;
  btnLabel: string;
  reviewDialogTitle: string;
  sendReviewBtnLabel: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "checkoutPageGlobal_select".
 */
export interface CheckoutPageGlobalSelect<T extends boolean = true> {
  contacts?:
    | T
    | {
        title?: T;
        emailInputLabel?: T;
        acceptNewsletter?: T;
      };
  address?:
    | T
    | {
        title?: T;
        nameInputLabel?: T;
        phoneInputLabel?: T;
        provinceCityInputLabel?: T;
        districtInputLabel?: T;
        wardInputLabel?: T;
        details?: T;
        saveForNextTime?: T;
      };
  shipping?:
    | T
    | {
        title?: T;
        standardShippingLabel?: T;
        fastShippingLabel?: T;
      };
  payment?:
    | T
    | {
        title?: T;
        codLabel?: T;
        bankTransferLabel?: T;
      };
  gift?:
    | T
    | {
        title?: T;
        senderInputLabel?: T;
        recipientInputLabel?: T;
        messageInputLabel?: T;
      };
  order?:
    | T
    | {
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactFormGlobal_select".
 */
export interface ContactFormGlobalSelect<T extends boolean = true> {
  title?: T;
  name?: T;
  phoneNumber?: T;
  email?: T;
  question?: T;
  actionSend?: T;
  biolakPhoneNumber?: T;
  actionCall?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "floatingGlobal_select".
 */
export interface FloatingGlobalSelect<T extends boolean = true> {
  label?: T;
  links?:
    | T
    | {
        link?: T;
        icon?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footerGlobal_select".
 */
export interface FooterGlobalSelect<T extends boolean = true> {
  image?:
    | T
    | {
        image?: T;
      };
  contactUs?:
    | T
    | {
        title?: T;
        emailInputLabel?: T;
        description?: T;
      };
  legal?:
    | T
    | {
        title?: T;
        content?: T;
        stamp?: T;
        copyright?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "headerGlobal_select".
 */
export interface HeaderGlobalSelect<T extends boolean = true> {
  headerItemsLeft?:
    | T
    | {
        kind?: T;
        prebuilt?: T;
        customUrl?: T;
        internalUrl?: T;
        label?: T;
        id?: T;
      };
  headerItemsRight?:
    | T
    | {
        kind?: T;
        prebuilt?: T;
        customUrl?: T;
        internalUrl?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "popupBannerGlobal_select".
 */
export interface PopupBannerGlobalSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "promoGlobal_select".
 */
export interface PromoGlobalSelect<T extends boolean = true> {
  message?: T;
  link?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviewsGlobal_select".
 */
export interface ReviewsGlobalSelect<T extends boolean = true> {
  title?: T;
  btnLabel?: T;
  reviewDialogTitle?: T;
  sendReviewBtnLabel?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}